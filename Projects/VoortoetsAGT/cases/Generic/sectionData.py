# Test data for modelling a cross secton.
# The data have been manually digitized from a photgraphed sketch using web app plotdigitizer.
# The digitizeddata have been cpied from the clipboard and put into a dict where the keys are the layer numbers and 
# the items are the x and y coordinages in an ndarray.
# Further down the data are rounded and interpolated an a much rifined x-coordinate grid.
# Finally it is made sure that the lower layers aare everywhere equal to or lower than the overlying ones.
# Layers with zero thickness should be dealt with in modflow 6 in the idomain as flow-thorugh ells (code -1).

# TO 2023-12-21

# %%

import numpy as np
import matplotlib.pyplot as plt
from etc import newfig
from fdm.mfgrid import Grid

#%% Row data, from plotdigitzer web app
lay = []

lay.append(np.array([
        [ -147.21345951629863, 10.32846],
        [ 588.8538380651945, 10.32846],
        [1062.0399579390116, 10.72992],
        [1177.707676130389, 13.13868],
        [1692.9547844374342, 9.92700],
        [2071.503680336488, 10.32846],
        [2229.2323869610937, 12.73722],
        [2523.659305993691, 12.73722],
        [3101.9978969505783, 9.92700],
        [3648.7907465825447, 4.70802],
        [3985.2786540483703, 3.10218],
        [4353.3123028391165, -1.313868],
        [4532.071503680337, -1.313868],
        [4889.589905362776, 2.70072],
        [5331.230283911672, 11.93430],
        [5741.324921135647, 24.37956],
        [6056.782334384859, 29.19708],
        [6340.694006309149, 25.98540],
        [6729.758149316509, 19.5620],
        [7118.82229232387, 13.54014],
        [7476.34069400631, 10.32846],
        [7844.374342797056, 10.72992],
        [8044.16403785489, 13.13868],
        [8296.529968454259, 11.93430],
        [8485.804416403786, 12.73722],
        [8790.74658254469, 18.75912],
        [8958.990536277603, 18.35766],
        [9474.237644584648, 13.13868],
        [9589.905362776026, 13.13868],
        [10010.515247108307, 10.72992],
        [10220.82018927445, 10.328467]])
)

lay.append(np.array([
        [-220.82018927444796, 4.708029197080293],
        [536.2776025236593, 6.7153284671532845],
        [977.9179810725552, 5.912408759124091],
        [1240.7991587802314, 8.321167883211686],
        [1692.9547844374342, 6.313868613138695],
        [1913.7749737118822, 9.525547445255484],
        [2365.930599369085, 12.335766423357668],
        [2691.9032597266037, 8.722627737226276],
        [3291.272344900105, 3.102189781021906],
        [3680.336487907466, 1.0948905109489004],
        [4006.3091482649843, -4.12408759124088],
        [4132.492113564669, -5.328467153284663],
        [4395.373291272345, -4.525547445255469],
        [4773.922187171399, -1.7153284671532845],
        [5120.925341745531, 5.912408759124091],
        [5268.13880126183, 9.927007299270073],
        [5657.20294426919, 21.970802919708035],
        [5920.084121976866, 27.99270072992701],
        [6193.48054679285, 28.795620437956202],
        [6456.361724500526, 24.379562043795616],
        [6593.059936908518, 19.160583941605836],
        [6824.395373291272, 13.138686131386862],
        [7171.398527865405, 6.7153284671532845],
        [7434.279705573082, 5.510948905109487],
        [7718.191377497372, 4.306569343065689],
        [8180.862250262881, 4.708029197080293],
        [8338.590956887487, 7.116788321167888],
        [8696.109358569927, 8.321167883211686],
        [8853.838065194532, 8.722627737226276],
        [9421.661409043112, 5.109489051094897],
        [9863.301787592009, 2.700729927007302],
        [10241.850683491062, 1.4963503649635044]])
)

lay.append(np.array([
        [-220.82018927444796, -16.16788321167882],
        [136.6982124079916, -16.167883211678827],
        [536.2776025236593, -15.364963503649633],
        [820.1892744479495, -15.364963503649633],
        [1324.9211356466878, -11.75182481751824],
        [1745.5310199789697, -12.153284671532845],
        [2050.473186119874, -14.96350364963503],
        [2565.7202944269193, -15.364963503649633],
        [3091.4826498422713, -15.364963503649633],
        [3606.7297581493167, -16.167883211678827],
        [4931.650893796004, -14.56204379562044],
        [5394.321766561515, -12.554744525547449],
        [6267.087276550999, -9.34306569343066],
        [6845.425867507886, -9.34306569343066],
        [7350.157728706625, -11.75182481751824],
        [7833.859095688749, -13.357664233576642],
        [8359.621451104102, -14.160583941605836],
        [9074.65825446898, -12.554744525547449],
        [9716.08832807571, -11.350364963503651],
        [10252.36593059937, -10.145985401459853]])
)

lay.append(np.array([
        [-210.3049421661409, -16.56934306569343],
        [136.6982124079916, -16.167883211678827],
        [525.7623554153523, -15.364963503649633],
        [1261.8296529968454, -17.77372262773722],
        [1682.4395373291272, -20.98540145985401],
        [2039.9579390115669, -20.98540145985401],
        [2544.689800210305, -20.182481751824817],
        [3101.9978969505783, -19.379562043795616],
        [3606.7297581493167, -16.56934306569343],
        [4931.650893796004, -14.96350364963503],
        [5268.13880126183, -15.364963503649633],
        [5730.8096740273395, -17.372262773722625],
        [6203.9957939011565, -18.576642335766422],
        [6593.059936908518, -18.175182481751825],
        [6961.093585699264, -17.77372262773722],
        [7423.764458464774, -18.97810218978102],
        [7970.557308096741, -20.583941605839414],
        [8412.197686645637, -21.386861313868614],
        [8864.35331230284, -23.394160583941606],
        [9453.207150368034, -25.401459854014597],
        [10010.515247108307, -21.78832116788321],
        [10315.457413249213, -20.583941605839414]])
)

lay.append(np.array([
        [-283.9116719242902, -63.54014598540146],
        [84.12197686645636, -65.14598540145985],
        [252.3659305993691, -65.14598540145985],
        [683.4910620399579, -64.74452554744525],
        [1114.6161934805468, -67.15328467153284],
        [1314.4058885383806, -63.941605839416056],
        [1787.5920084121979, -65.94890510948905],
        [2124.0799158780233, -71.16788321167883],
        [2523.659305993691, -73.17518248175182],
        [2870.6624605678235, -68.75912408759125],
        [3270.241850683491, -61.13138686131387],
        [3785.4889589905365, -57.51824817518248],
        [4206.0988433228185, -56.715328467153284],
        [4689.800210304942, -61.53284671532847],
        [5005.257623554154, -67.15328467153284],
        [5173.5015772870665, -67.95620437956204],
        [5499.474237644585, -64.34306569343066],
        [5825.446898002103, -63.54014598540146],
        [6246.056782334385, -67.55474452554745],
        [6603.575184016825, -70.76642335766424],
        [7076.761303890642, -71.97080291970804],
        [7570.977917981073, -67.55474452554745],
        [8023.133543638276, -61.934306569343065],
        [8517.350157728706, -60.72992700729927],
        [9032.597266035753, -64.34306569343066],
        [9505.78338590957, -68.35766423357664],
        [9968.45425867508, -75.18248175182482],
        [10241.850683491062, -79.5985401459854]])
)

# %% Round the raw data (not strictly necessary)    
# interpolate the digized lines on a 100 m grid along the x-axis
x  = np.linspace(0, 10000, 1001)
xm = 0.5 * (x[:-1] + x[1:])
Z  = np.zeros((len(lay), len(xm)), dtype=float)
for i in range(len(lay)):
    Z[i] = np.interp(xm, lay[i][:, 0], lay[i][:,1])
    
# Make sure there are no lower layers above upper layers
for i in range(len(Z)):
    Z[i] = np.round(Z[i], decimals=3)
    if i == 0:
        continue
    Z[i][Z[i] > Z[i-1]] = Z[i-1][Z[i] > Z[i-1]]
    
gr = Grid(x, [-0.5, 0.5], Z[:, np.newaxis, :], axial=False, min_dz=1e-6)

# layer can be exported

if __name__ == '__main__':

    # Show the results
    ax = newfig("The cross section lines", "x [m]", "z [m]")

    for i, z in enumerate(Z):
        ax.plot(lay[i][:, 0], lay[i][:,1], '.', label=f'layer {i}')
        ax.plot(xm, Z[i], label=f"layer {i}")
        
    ax.legend()
    plt.show()
    
    # %%

